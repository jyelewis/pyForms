<validationGroup server>
	<textbox server id="tbxTest" />

	<button server id="btnSubmit" validates="true" />
</validationGroup>

#ss code
ctrls.tbxText.validatiors.append(pyForms.validators.required(), "This field is required")

#validator code
* Function returning class
* class contains property returning javascript code to validate on client side (return true/false)
* class contains function to run server side after onRequest() to validate (CustomControl Validatable will handle firing this) and request.isValid will be set to False if this fails


 - validation group tag injects javascript (triggered by a click on the validationTrigger attribute - UNLESS the control has an overwridden autoPostBackEvent)
 	- this js will fire each client side validator in sucession, displaying the message text if one fails - then e.preventDefault()



 #--------------------------------------------------------------------------------------------------
 Control version

<validationGroup server>
	<textbox server id="tbxTest" />
	<validator:required control="tbxTest">This field is required</validator:required>

	<button server id="btnSubmit" validates="true" />
</validationGroup>


- validation group will create a custom register function -
	Makes 3 lists
	- every control (with an id)
	- every validator
	- every button (with validates="true")


